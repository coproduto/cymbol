package walker;

import autogenerated.CymbolBaseVisitor;
import autogenerated.CymbolParser;

public class CymbolCallGraphVisitor extends CymbolBaseVisitor<T> {
	@Override public T visitFuncDecl(CymbolParser.FuncDeclContext ctx) { 
		boolean hasItem = false;
		Iterator<Token> funcIDsAsIterator = funcIDs.iterator();
	    while (funcIDsAsIterator.hasNext()){
			  Token it = funcIDsAsIterator.next();
			  if (it == ctx.getSymbol())
				hasItem = true;
	    }
		
		if (!hasItem){
			//Escrever no arquivo: "n" + funcIDs.length + "[label=\"" + ctx.type() + ctx.getSymbol().getText() + "(" + ctx.paramTypeList().paramType() + ")\"];"
			funcIDs.Add(ctx.getSymbol());
		}
		
		return visitChildren(ctx); 
	}
    
}
